# üìú Cheat Sheet Monitoring Logs Linux

Cette cheat sheet te permet de surveiller efficacement ton syst√®me Linux pour identifier rapidement les tentatives d'intrusion (bruteforce), les connexions suspectes ou v√©rifier ce qui se passe sur ta machine en temps r√©el ou diff√©r√©.

---

## üöÄ Surveillance des logs en temps r√©el

| Objectif                               | Commande                                  | Exemple concret                                                  |
|----------------------------------------|-------------------------------------------|------------------------------------------------------------------|
| Surveiller toutes les connexions SSH   | `tail -f /var/log/auth.log`               | V√©rifier tentative d'attaques bruteforce SSH en direct           |
| Surveillance globale des logs syst√®me  | `journalctl -f`                           | Voir en direct tout ce qui se passe sur le syst√®me               |
| Surveillance d'acc√®s Apache/Nginx      | `tail -f /var/log/apache2/access.log`     | Voir en temps r√©el qui visite ton site web                       |
| Surveillance des erreurs Apache/Nginx  | `tail -f /var/log/apache2/error.log`      | Identifier imm√©diatement les erreurs serveur web                 |

---

## üïë Analyse des logs en diff√©r√©

| Objectif                             | Commande                                                | Exemple concret                                                          |
|--------------------------------------|---------------------------------------------------------|--------------------------------------------------------------------------|
| Voir les connexions r√©ussies (SSH)   | `grep "Accepted" /var/log/auth.log`                    | V√©rifier qui s'est connect√© avec succ√®s                                  |
| Voir les √©checs d'authentification   | `grep "Failed" /var/log/auth.log`                      | Identifier les tentatives de bruteforce rat√©es                           |
| Historique des connexions SSH        | `last`                                                  | Lister les derni√®res connexions √† ton syst√®me                            |
| Historique des connexions √©chou√©es   | `lastb`                                                 | Lister uniquement les connexions √©chou√©es                                |

---

## üîç Filtrage avanc√© des logs

| Objectif                                  | Commande                                                        | Exemple concret                                                  |
|-------------------------------------------|-----------------------------------------------------------------|------------------------------------------------------------------|
| Filtrer par IP pr√©cise                    | `grep "192.168.1.10" /var/log/auth.log`                        | Voir activit√©s sp√©cifiques d'une IP                              |
| Rechercher une date pr√©cise dans les logs | `grep "Mar 10" /var/log/auth.log`                              | Voir ce qui s'est pass√© √† une date pr√©cise                       |
| Utiliser journalctl pour filtrer SSH      | `journalctl -u ssh.service`                                     | Logs sp√©cifiques du service SSH                                  |
| Voir les logs kernel uniquement           | `journalctl -k`                                                 | V√©rifier uniquement les alertes ou erreurs du noyau              |

---

## ‚öôÔ∏è Exemple pratique (bruteforce SSH)

**Contexte :**
Tu soup√ßonnes une tentative de bruteforce SSH sur ta machine.

- V√©rification en direct :

```bash
sudo tail -f /var/log/auth.log | grep "Failed"
```

- Analyse post-attaque :

```bash
sudo grep "Failed password" /var/log/auth.log | awk '{print $(NF-3)}' | sort | uniq -c | sort -nr | head -5
```

Cette commande affiche les 5 IP ayant le plus tent√© de bruteforce ton serveur SSH.

---

## üîê Bonnes pratiques compl√©mentaires

- Installer et configurer **fail2ban** pour bloquer automatiquement les attaques par bruteforce.

```bash
sudo apt install fail2ban
```

Logs de fail2ban :

```bash
sudo tail -f /var/log/fail2ban.log
```

---

## üìö Ressources compl√©mentaires

- [Documentation Journalctl](https://man7.org/linux/man-pages/man1/journalctl.1.html)
- [Fail2Ban GitHub](https://github.com/fail2ban/fail2ban)
